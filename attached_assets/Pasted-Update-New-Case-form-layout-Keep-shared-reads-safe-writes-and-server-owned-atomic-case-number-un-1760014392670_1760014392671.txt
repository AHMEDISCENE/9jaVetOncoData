Update New Case form layout

(Keep shared reads, safe writes, and server-owned atomic case_number unchanged.)

Goal

On the New Case flow:

State → Geo-political Zone: user picks a State (required), the Zone shows automatically (read-only).

Clinic: prefill from session (user’s clinic), but keep it editable via typeahead (with create-if-allowed hook for later).

Breed: keep species Dog/Cat only; change Breed to a combobox that allows selecting from list or typing a custom breed.

Implementation details

Files to touch (typical names; search if paths differ):

client/src/components/case-wizard.tsx (or the New Case step components)

client/src/pages/new-case.tsx (if present)

client/src/lib/validation.ts (Zod/Yup schemas)

client/src/lib/constants.ts (add state/zone map)

Optional: small UI atoms for Combobox, StateSelect, ClinicSelect.

State → Zone mapping (client-side display only in this task):
Add a TypeScript map for Nigeria’s states → zone:

North Central: Benue, Kogi, Kwara, Nasarawa, Niger, Plateau, FCT

North East: Adamawa, Bauchi, Borno, Gombe, Taraba, Yobe

North West: Jigawa, Kaduna, Kano, Katsina, Kebbi, Sokoto, Zamfara

South East: Abia, Anambra, Ebonyi, Enugu, Imo

South South: Akwa Ibom, Bayelsa, Cross River, Delta, Edo, Rivers

South West: Ekiti, Lagos, Ogun, Ondo, Osun, Oyo

Add getZoneForState(state: string): GeoZone util and call it when State changes.

Show Zone in the form as a read-only field (do not send from client; server already sets zone later).

State field (required):

Use a dropdown containing the 36 states + FCT.

Validate required in the form schema.

When State changes → compute Zone and update the read-only Zone display.

Clinic field (prefill + editable):

Pull clinicId/clinicName from the existing auth/session provider (e.g., useAuth() or similar).

Prefill Clinic with session clinic; render as a typeahead that lists known clinics (call existing API).

Allow the user to select a different clinic. (If “create clinic” is supported later, keep a stub handler; for now, only allow selecting existing clinics.)

Validate Clinic is required.

Breed combobox with custom value:

Limit Species to Dog and Cat.

Breed input becomes a combobox:

When the user types, filter the species-specific list.

If no match, allow “Use typed value” → saves free-text to breed.

Schema must accept either a known option or a non-empty custom string.

Validation (Zod/Yup):

state: required (enum of 36 + FCT).

clinic: required (id or name, depending on your model).

breed: allow known option or non-empty custom text.

Do not add geo_zone to the payload; it’s displayed only.

Do NOT change:

Auth, shared reads, write guards.

Server-owned case_number generation.

Any DB schema (zone will be enforced server-side in a later task).

Acceptance checks (manual)

New Case shows State (required) and a read-only Zone that updates when State changes.

Clinic is prefilled from the signed-in user and can be changed via typeahead.

Breed allows picking from list or typing a custom breed; value saves and reloads correctly.

No regressions: case creation still succeeds, case_number still generated by server.

Commit message

feat(form): state→zone display, clinic prefill (editable), combobox breed